{"version":3,"sources":["react-motion/mapToZero.js","react-motion/stripStyle.js","react-motion/stepper.js","react-motion/shouldStopAnimation.js","react-motion/TransitionMotion.js","react-motion/mergeDiff.js","react-motion/presets.js","react-motion/spring.js","Header/WaterRipples/WaterRipplesContainer.jsx","Header/HeaderContainer.jsx","Board/GridCell/GridCell.js","Board/BoardGameOver.js","Board/BoardComponent.js","Board/BoardContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["mapToZero","obj","ret","key","Object","prototype","hasOwnProperty","call","stripStyle","style","val","reusedTuple","stepper","secondPerFrame","x","v","destX","k","b","precision","newV","newX","Math","abs","shouldStopAnimation","currentStyle","currentVelocity","styleValue","msPerFrame","rehydrateStyles","mergedPropsStyles","unreadPropStyles","plainStyles","cUnreadPropStyles","map","mergedPropsStyle","i","data","j","length","mergeAndSync","willEnter","willLeave","didLeave","oldMergedPropsStyles","destStyles","oldCurrentStyles","oldCurrentVelocities","oldLastIdealStyles","oldLastIdealVelocities","newMergedPropsStyles","prev","next","onRemove","prevKeyIndex","nextKeyIndex","fill","push","sort","a","nextOrderA","nextOrderB","prevOrderA","prevOrderB","pivot","mergeDiff","oldIndex","oldMergedPropsStyle","leavingStyle","newCurrentStyles","newCurrentVelocities","newLastIdealStyles","newLastIdealVelocities","newMergedPropsStyleCell","foundOldIndex","plainStyle","velocity","TransitionMotion","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","unmounting","animationID","prevTime","accumulatedTime","clearUnreadPropStyle","_mergeAndSync","state","currentStyles","currentVelocities","lastIdealStyles","lastIdealVelocities","_mergeAndSync2","slicedToArray","unreadPropStyle","dirty","objectSpread","setState","startAnimationIfNecessary","defaultRaf","timestamp","propStyles","styles","shouldStopAnimationAll","currentTime","defaultNow","timeDelta","currentFrameCompletion","floor","framesToCatchUp","_mergeAndSync3","_mergeAndSync4","newMergedPropsStyle","newCurrentStyle","newCurrentVelocity","newLastIdealStyle","newLastIdealVelocity","newLastIdealStyleValue","newLastIdealVelocityValue","_stepper","stiffness","damping","_stepper2","_stepper3","_stepper4","nextIdealX","nextIdealV","defaultState","_this$props","defaultStyles","defaultStyleCell","s","_mergeAndSync5","_mergeAndSync6","cancel","hydratedStyles","renderedChildren","children","React","Children","only","Component","defaultProps","styleThatEntered","defaultConfig","spring","config","leavingSpringConfig","WaterRipplesContainer","handleMouseMove","_ref","pageX","pageY","mouse","now","Date","handleKeyDown","e","randomNumber","min","max","round","random","handleTouchMove","preventDefault","code","touches","styleCell","opacity","scale","window","addEventListener","_this2","_this$state","_this$state$mouse","mouseX","mouseY","y","react_default","createElement","TransitionMotion_TransitionMotion","circles","onMouseMove","onTouchMove","className","_ref2","_ref2$style","transform","concat","WebkitTransform","HeaderContainer","WaterRipplesContainer_WaterRipplesContainer","GridCell","foodCell","snakeCell","tailCell","classes","boardGameOver","snake","react","tail","BoardComponent","gridSize","apple","gameOver","cells","Array","from","keys","boardItem","col","row","head","find","item","Board_GridCell_GridCell","BoardGameOver","BoardContainer","getRandomApple","randomFood","parseInt","moveSnake","direction","setDirection","gameLoop","eatApple","collisionWithApple","collisionWithEdge","collisionWithTail","nextSnake","toConsumableArray","pop","endGame","_this$state2","inTail","clearInterval","intervalID","height","innerHeight","document","setInterval","_this$state3","BoardComponent_BoardComponent","App","HeaderContainer_HeaderContainer","Board_BoardContainer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d7eb4d6.chunk.js","sourcesContent":["/* @flow */\r\nimport type { PlainStyle, Style } from './Types';\r\n\r\n// currently used to initiate the velocity style object to 0\r\nexport default function mapToZero(obj: Style | PlainStyle): PlainStyle {\r\n  let ret = {};\r\n  for (const key in obj) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n      ret[key] = 0;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n","/* @flow */\r\n// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by\r\n// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}\r\n\r\nimport type { Style, PlainStyle } from './Types';\r\n\r\nexport default function stripStyle(style: Style): PlainStyle {\r\n  let ret = {};\r\n  for (const key in style) {\r\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\r\n      continue;\r\n    }\r\n    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;\r\n  }\r\n  return ret;\r\n}\r\n","/* @flow */\r\n\r\n// stepper is used a lot. Saves allocation to return the same array wrapper.\r\n// This is fine and danger-free against mutations because the callsite\r\n// immediately destructures it and gets the numbers inside without passing the\r\n// array reference around.\r\nlet reusedTuple: [number, number] = [0, 0];\r\nexport default function stepper(\r\n  secondPerFrame: number,\r\n  x: number,\r\n  v: number,\r\n  destX: number,\r\n  k: number,\r\n  b: number,\r\n  precision: number,\r\n): [number, number] {\r\n  // Spring stiffness, in kg / s^2\r\n\r\n  // for animations, destX is really spring length (spring at rest). initial\r\n  // position is considered as the stretched/compressed position of a spring\r\n  const Fspring = -k * (x - destX);\r\n\r\n  // Damping, in kg / s\r\n  const Fdamper = -b * v;\r\n\r\n  // usually we put mass here, but for animation purposes, specifying mass is a\r\n  // bit redundant. you could simply adjust k and b accordingly\r\n  // let a = (Fspring + Fdamper) / mass;\r\n  const a = Fspring + Fdamper;\r\n\r\n  const newV = v + a * secondPerFrame;\r\n  const newX = x + newV * secondPerFrame;\r\n\r\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\r\n    reusedTuple[0] = destX;\r\n    reusedTuple[1] = 0;\r\n    return reusedTuple;\r\n  }\r\n\r\n  reusedTuple[0] = newX;\r\n  reusedTuple[1] = newV;\r\n  return reusedTuple;\r\n}\r\n","/* @flow */\r\nimport type { PlainStyle, Style, Velocity } from './Types';\r\n\r\n// usage assumption: currentStyle values have already been rendered but it says\r\n// nothing of whether currentStyle is stale (see unreadPropStyle)\r\nexport default function shouldStopAnimation(\r\n  currentStyle: PlainStyle,\r\n  style: Style,\r\n  currentVelocity: Velocity,\r\n): boolean {\r\n  for (let key in style) {\r\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\r\n      continue;\r\n    }\r\n\r\n    if (currentVelocity[key] !== 0) {\r\n      return false;\r\n    }\r\n\r\n    const styleValue =\r\n      typeof style[key] === 'number' ? style[key] : style[key].val;\r\n    // stepper will have already taken care of rounding precision errors, so\r\n    // won't have such thing as 0.9999 !=== 1\r\n    if (currentStyle[key] !== styleValue) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","/* @flow */\r\nimport mapToZero from './mapToZero';\r\nimport stripStyle from './stripStyle';\r\nimport stepper from './stepper';\r\nimport mergeDiff from './mergeDiff';\r\nimport defaultNow from 'performance-now';\r\nimport defaultRaf from 'raf';\r\nimport shouldStopAnimation from './shouldStopAnimation';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport type {\r\n  ReactElement,\r\n  PlainStyle,\r\n  Velocity,\r\n  TransitionStyle,\r\n  TransitionPlainStyle,\r\n  WillEnter,\r\n  WillLeave,\r\n  DidLeave,\r\n  TransitionProps,\r\n} from './Types';\r\n\r\nconst msPerFrame = 1000 / 60;\r\n\r\n// the children function & (potential) styles function asks as param an\r\n// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format\r\n// {key: string, data?: any, style: PlainStyle}. However, the way we keep\r\n// internal states doesn't contain such a data structure (check the state and\r\n// TransitionMotionState). So when children function and others ask for such\r\n// data we need to generate them on the fly by combining mergedPropsStyles and\r\n// currentStyles/lastIdealStyles\r\nfunction rehydrateStyles(\r\n  mergedPropsStyles: Array<TransitionStyle>,\r\n  unreadPropStyles: ?Array<TransitionStyle>,\r\n  plainStyles: Array<PlainStyle>,\r\n): Array<TransitionPlainStyle> {\r\n  // Copy the value to a `const` so that Flow understands that the const won't\r\n  // change and will be non-nullable in the callback below.\r\n  const cUnreadPropStyles = unreadPropStyles;\r\n  if (cUnreadPropStyles == null) {\r\n    return mergedPropsStyles.map((mergedPropsStyle, i) => ({\r\n      key: mergedPropsStyle.key,\r\n      data: mergedPropsStyle.data,\r\n      style: plainStyles[i],\r\n    }));\r\n  }\r\n  return mergedPropsStyles.map((mergedPropsStyle, i) => {\r\n    for (let j = 0; j < cUnreadPropStyles.length; j++) {\r\n      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {\r\n        return {\r\n          key: cUnreadPropStyles[j].key,\r\n          data: cUnreadPropStyles[j].data,\r\n          style: plainStyles[i],\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      key: mergedPropsStyle.key,\r\n      data: mergedPropsStyle.data,\r\n      style: plainStyles[i],\r\n    };\r\n  });\r\n}\r\n\r\nfunction shouldStopAnimationAll(\r\n  currentStyles: Array<PlainStyle>,\r\n  destStyles: Array<TransitionStyle>,\r\n  currentVelocities: Array<Velocity>,\r\n  mergedPropsStyles: Array<TransitionStyle>,\r\n): boolean {\r\n  if (mergedPropsStyles.length !== destStyles.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < mergedPropsStyles.length; i++) {\r\n    if (mergedPropsStyles[i].key !== destStyles[i].key) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // we have the invariant that mergedPropsStyles and\r\n  // currentStyles/currentVelocities/last* are synced in terms of cells, see\r\n  // mergeAndSync comment for more info\r\n  for (let i = 0; i < mergedPropsStyles.length; i++) {\r\n    if (\r\n      !shouldStopAnimation(\r\n        currentStyles[i],\r\n        destStyles[i].style,\r\n        currentVelocities[i],\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// core key merging logic\r\n\r\n// things to do: say previously merged style is {a, b}, dest style (prop) is {b,\r\n// c}, previous current (interpolating) style is {a, b}\r\n// **invariant**: current[i] corresponds to merged[i] in terms of key\r\n\r\n// steps:\r\n// turn merged style into {a?, b, c}\r\n//    add c, value of c is destStyles.c\r\n//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}\r\n// turn current (interpolating) style from {a, b} into {a?, b, c}\r\n//    maybe remove a\r\n//    certainly add c, value of c is willEnter(c)\r\n// loop over merged and construct new current\r\n// dest doesn't change, that's owner's\r\nfunction mergeAndSync(\r\n  willEnter: WillEnter,\r\n  willLeave: WillLeave,\r\n  didLeave: DidLeave,\r\n  oldMergedPropsStyles: Array<TransitionStyle>,\r\n  destStyles: Array<TransitionStyle>,\r\n  oldCurrentStyles: Array<PlainStyle>,\r\n  oldCurrentVelocities: Array<Velocity>,\r\n  oldLastIdealStyles: Array<PlainStyle>,\r\n  oldLastIdealVelocities: Array<Velocity>,\r\n): [\r\n  Array<TransitionStyle>,\r\n  Array<PlainStyle>,\r\n  Array<Velocity>,\r\n  Array<PlainStyle>,\r\n  Array<Velocity>,\r\n] {\r\n  const newMergedPropsStyles = mergeDiff(\r\n    oldMergedPropsStyles,\r\n    destStyles,\r\n    (oldIndex, oldMergedPropsStyle) => {\r\n      const leavingStyle = willLeave(oldMergedPropsStyle);\r\n      if (leavingStyle == null) {\r\n        didLeave({\r\n          key: oldMergedPropsStyle.key,\r\n          data: oldMergedPropsStyle.data,\r\n        });\r\n        return null;\r\n      }\r\n      if (\r\n        shouldStopAnimation(\r\n          oldCurrentStyles[oldIndex],\r\n          leavingStyle,\r\n          oldCurrentVelocities[oldIndex],\r\n        )\r\n      ) {\r\n        didLeave({\r\n          key: oldMergedPropsStyle.key,\r\n          data: oldMergedPropsStyle.data,\r\n        });\r\n        return null;\r\n      }\r\n      return {\r\n        key: oldMergedPropsStyle.key,\r\n        data: oldMergedPropsStyle.data,\r\n        style: leavingStyle,\r\n      };\r\n    },\r\n  );\r\n\r\n  let newCurrentStyles = [];\r\n  let newCurrentVelocities = [];\r\n  let newLastIdealStyles = [];\r\n  let newLastIdealVelocities = [];\r\n  for (let i = 0; i < newMergedPropsStyles.length; i++) {\r\n    const newMergedPropsStyleCell = newMergedPropsStyles[i];\r\n    let foundOldIndex = null;\r\n    for (let j = 0; j < oldMergedPropsStyles.length; j++) {\r\n      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {\r\n        foundOldIndex = j;\r\n        break;\r\n      }\r\n    }\r\n    // TODO: key search code\r\n    if (foundOldIndex == null) {\r\n      const plainStyle = willEnter(newMergedPropsStyleCell);\r\n      newCurrentStyles[i] = plainStyle;\r\n      newLastIdealStyles[i] = plainStyle;\r\n\r\n      const velocity = mapToZero(newMergedPropsStyleCell.style);\r\n      newCurrentVelocities[i] = velocity;\r\n      newLastIdealVelocities[i] = velocity;\r\n    } else {\r\n      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];\r\n      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];\r\n      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];\r\n      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];\r\n    }\r\n  }\r\n\r\n  return [\r\n    newMergedPropsStyles,\r\n    newCurrentStyles,\r\n    newCurrentVelocities,\r\n    newLastIdealStyles,\r\n    newLastIdealVelocities,\r\n  ];\r\n}\r\n\r\ntype TransitionMotionDefaultProps = {\r\n  willEnter: WillEnter,\r\n  willLeave: WillLeave,\r\n  didLeave: DidLeave,\r\n};\r\n\r\ntype TransitionMotionState = {\r\n  // list of styles, each containing interpolating values. Part of what's passed\r\n  // to children function. Notice that this is\r\n  // Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,\r\n  // data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles\r\n  // contains the key & data info (so that we only have a single source of truth\r\n  // for these, and to save space). Check the comment for `rehydrateStyles` to\r\n  // see how we regenerate the entirety of what's passed to children function\r\n  currentStyles: Array<PlainStyle>,\r\n  currentVelocities: Array<Velocity>,\r\n  lastIdealStyles: Array<PlainStyle>,\r\n  lastIdealVelocities: Array<Velocity>,\r\n  // the array that keeps track of currently rendered stuff! Including stuff\r\n  // that you've unmounted but that's still animating. This is where it lives\r\n  mergedPropsStyles: Array<TransitionStyle>,\r\n};\r\n\r\nexport default class TransitionMotion extends React.Component<\r\n  TransitionProps,\r\n  TransitionMotionState,\r\n> {\r\n  static propTypes = {\r\n    defaultStyles: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        key: PropTypes.string.isRequired,\r\n        data: PropTypes.any,\r\n        style: PropTypes.objectOf(PropTypes.number).isRequired,\r\n      }),\r\n    ),\r\n    styles: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          key: PropTypes.string.isRequired,\r\n          data: PropTypes.any,\r\n          style: PropTypes.objectOf(\r\n            PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\r\n          ).isRequired,\r\n        }),\r\n      ),\r\n    ]).isRequired,\r\n    children: PropTypes.func.isRequired,\r\n    willEnter: PropTypes.func,\r\n    willLeave: PropTypes.func,\r\n    didLeave: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps: TransitionMotionDefaultProps = {\r\n    willEnter: styleThatEntered => stripStyle(styleThatEntered.style),\r\n    // recall: returning null makes the current unmounting TransitionStyle\r\n    // disappear immediately\r\n    willLeave: () => null,\r\n    didLeave: () => {},\r\n  };\r\n\r\n  unmounting: boolean = false;\r\n  animationID: ?number = null;\r\n  prevTime = 0;\r\n  accumulatedTime = 0;\r\n  // it's possible that currentStyle's value is stale: if props is immediately\r\n  // changed from 0 to 400 to spring(0) again, the async currentStyle is still\r\n  // at 0 (didn't have time to tick and interpolate even once). If we naively\r\n  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\r\n  // In reality currentStyle should be 400\r\n  unreadPropStyles: ?Array<TransitionStyle> = null;\r\n\r\n  constructor(props: TransitionProps) {\r\n    super(props);\r\n    this.state = this.defaultState();\r\n  }\r\n\r\n  defaultState(): TransitionMotionState {\r\n    const {\r\n      defaultStyles,\r\n      styles,\r\n      willEnter,\r\n      willLeave,\r\n      didLeave,\r\n    } = this.props;\r\n    const destStyles: Array<TransitionStyle> =\r\n      typeof styles === 'function' ? styles(defaultStyles) : styles;\r\n\r\n    // this is special. for the first time around, we don't have a comparison\r\n    // between last (no last) and current merged props. we'll compute last so:\r\n    // say default is {a, b} and styles (dest style) is {b, c}, we'll\r\n    // fabricate last as {a, b}\r\n    let oldMergedPropsStyles: Array<TransitionStyle>;\r\n    if (defaultStyles == null) {\r\n      oldMergedPropsStyles = destStyles;\r\n    } else {\r\n      oldMergedPropsStyles = (defaultStyles: any).map(defaultStyleCell => {\r\n        // TODO: key search code\r\n        for (let i = 0; i < destStyles.length; i++) {\r\n          if (destStyles[i].key === defaultStyleCell.key) {\r\n            return destStyles[i];\r\n          }\r\n        }\r\n        return defaultStyleCell;\r\n      });\r\n    }\r\n    const oldCurrentStyles =\r\n      defaultStyles == null\r\n        ? destStyles.map(s => stripStyle(s.style))\r\n        : (defaultStyles: any).map(s => stripStyle(s.style));\r\n    const oldCurrentVelocities =\r\n      defaultStyles == null\r\n        ? destStyles.map(s => mapToZero(s.style))\r\n        : defaultStyles.map(s => mapToZero(s.style));\r\n    const [\r\n      mergedPropsStyles,\r\n      currentStyles,\r\n      currentVelocities,\r\n      lastIdealStyles,\r\n      lastIdealVelocities,\r\n    ] = mergeAndSync(\r\n      // Because this is an old-style createReactClass component, Flow doesn't\r\n      // understand that the willEnter and willLeave props have default values\r\n      // and will always be present.\r\n      (willEnter: any),\r\n      (willLeave: any),\r\n      (didLeave: any),\r\n      oldMergedPropsStyles,\r\n      destStyles,\r\n      oldCurrentStyles,\r\n      oldCurrentVelocities,\r\n      oldCurrentStyles, // oldLastIdealStyles really\r\n      oldCurrentVelocities, // oldLastIdealVelocities really\r\n    );\r\n\r\n    return {\r\n      currentStyles,\r\n      currentVelocities,\r\n      lastIdealStyles,\r\n      lastIdealVelocities,\r\n      mergedPropsStyles,\r\n    };\r\n  }\r\n\r\n  // after checking for unreadPropStyles != null, we manually go set the\r\n  // non-interpolating values (those that are a number, without a spring\r\n  // config)\r\n  clearUnreadPropStyle = (unreadPropStyles: Array<TransitionStyle>): void => {\r\n    let [\r\n      mergedPropsStyles,\r\n      currentStyles,\r\n      currentVelocities,\r\n      lastIdealStyles,\r\n      lastIdealVelocities,\r\n    ] = mergeAndSync(\r\n      (this.props.willEnter: any),\r\n      (this.props.willLeave: any),\r\n      (this.props.didLeave: any),\r\n      this.state.mergedPropsStyles,\r\n      unreadPropStyles,\r\n      this.state.currentStyles,\r\n      this.state.currentVelocities,\r\n      this.state.lastIdealStyles,\r\n      this.state.lastIdealVelocities,\r\n    );\r\n\r\n    for (let i = 0; i < unreadPropStyles.length; i++) {\r\n      const unreadPropStyle = unreadPropStyles[i].style;\r\n      let dirty = false;\r\n\r\n      for (let key in unreadPropStyle) {\r\n        if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\r\n          continue;\r\n        }\r\n\r\n        const styleValue = unreadPropStyle[key];\r\n        if (typeof styleValue === 'number') {\r\n          if (!dirty) {\r\n            dirty = true;\r\n            currentStyles[i] = { ...currentStyles[i] };\r\n            currentVelocities[i] = { ...currentVelocities[i] };\r\n            lastIdealStyles[i] = { ...lastIdealStyles[i] };\r\n            lastIdealVelocities[i] = { ...lastIdealVelocities[i] };\r\n            mergedPropsStyles[i] = {\r\n              key: mergedPropsStyles[i].key,\r\n              data: mergedPropsStyles[i].data,\r\n              style: { ...mergedPropsStyles[i].style },\r\n            };\r\n          }\r\n          currentStyles[i][key] = styleValue;\r\n          currentVelocities[i][key] = 0;\r\n          lastIdealStyles[i][key] = styleValue;\r\n          lastIdealVelocities[i][key] = 0;\r\n          mergedPropsStyles[i].style[key] = styleValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    // unlike the other 2 components, we can't detect staleness and optionally\r\n    // opt out of setState here. each style object's data might contain new\r\n    // stuff we're not/cannot compare\r\n    this.setState({\r\n      currentStyles,\r\n      currentVelocities,\r\n      mergedPropsStyles,\r\n      lastIdealStyles,\r\n      lastIdealVelocities,\r\n    });\r\n  };\r\n\r\n  startAnimationIfNecessary = (): void => {\r\n    if (this.unmounting || this.animationID != null) {\r\n      return;\r\n    }\r\n\r\n    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\r\n    // call cb? No, otherwise accidental parent rerender causes cb trigger\r\n    this.animationID = defaultRaf(timestamp => {\r\n      // https://github.com/chenglou/react-motion/pull/420\r\n      // > if execution passes the conditional if (this.unmounting), then\r\n      // executes async defaultRaf and after that component unmounts and after\r\n      // that the callback of defaultRaf is called, then setState will be called\r\n      // on unmounted component.\r\n      if (this.unmounting) {\r\n        return;\r\n      }\r\n\r\n      const propStyles = this.props.styles;\r\n      let destStyles: Array<TransitionStyle> =\r\n        typeof propStyles === 'function'\r\n          ? propStyles(\r\n              rehydrateStyles(\r\n                this.state.mergedPropsStyles,\r\n                this.unreadPropStyles,\r\n                this.state.lastIdealStyles,\r\n              ),\r\n            )\r\n          : propStyles;\r\n\r\n      // check if we need to animate in the first place\r\n      if (\r\n        shouldStopAnimationAll(\r\n          this.state.currentStyles,\r\n          destStyles,\r\n          this.state.currentVelocities,\r\n          this.state.mergedPropsStyles,\r\n        )\r\n      ) {\r\n        // no need to cancel animationID here; shouldn't have any in flight\r\n        this.animationID = null;\r\n        this.accumulatedTime = 0;\r\n        return;\r\n      }\r\n\r\n      const currentTime = timestamp || defaultNow();\r\n      const timeDelta = currentTime - this.prevTime;\r\n      this.prevTime = currentTime;\r\n      this.accumulatedTime = this.accumulatedTime + timeDelta;\r\n      // more than 10 frames? prolly switched browser tab. Restart\r\n      if (this.accumulatedTime > msPerFrame * 10) {\r\n        this.accumulatedTime = 0;\r\n      }\r\n\r\n      if (this.accumulatedTime === 0) {\r\n        // no need to cancel animationID here; shouldn't have any in flight\r\n        this.animationID = null;\r\n        this.startAnimationIfNecessary();\r\n        return;\r\n      }\r\n\r\n      let currentFrameCompletion =\r\n        (this.accumulatedTime -\r\n          Math.floor(this.accumulatedTime / msPerFrame) * msPerFrame) /\r\n        msPerFrame;\r\n      const framesToCatchUp = Math.floor(this.accumulatedTime / msPerFrame);\r\n\r\n      let [\r\n        newMergedPropsStyles,\r\n        newCurrentStyles,\r\n        newCurrentVelocities,\r\n        newLastIdealStyles,\r\n        newLastIdealVelocities,\r\n      ] = mergeAndSync(\r\n        (this.props.willEnter: any),\r\n        (this.props.willLeave: any),\r\n        (this.props.didLeave: any),\r\n        this.state.mergedPropsStyles,\r\n        destStyles,\r\n        this.state.currentStyles,\r\n        this.state.currentVelocities,\r\n        this.state.lastIdealStyles,\r\n        this.state.lastIdealVelocities,\r\n      );\r\n      for (let i = 0; i < newMergedPropsStyles.length; i++) {\r\n        const newMergedPropsStyle = newMergedPropsStyles[i].style;\r\n        let newCurrentStyle: PlainStyle = {};\r\n        let newCurrentVelocity: Velocity = {};\r\n        let newLastIdealStyle: PlainStyle = {};\r\n        let newLastIdealVelocity: Velocity = {};\r\n\r\n        for (let key in newMergedPropsStyle) {\r\n          if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {\r\n            continue;\r\n          }\r\n\r\n          const styleValue = newMergedPropsStyle[key];\r\n          if (typeof styleValue === 'number') {\r\n            newCurrentStyle[key] = styleValue;\r\n            newCurrentVelocity[key] = 0;\r\n            newLastIdealStyle[key] = styleValue;\r\n            newLastIdealVelocity[key] = 0;\r\n          } else {\r\n            let newLastIdealStyleValue = newLastIdealStyles[i][key];\r\n            let newLastIdealVelocityValue = newLastIdealVelocities[i][key];\r\n            for (let j = 0; j < framesToCatchUp; j++) {\r\n              [newLastIdealStyleValue, newLastIdealVelocityValue] = stepper(\r\n                msPerFrame / 1000,\r\n                newLastIdealStyleValue,\r\n                newLastIdealVelocityValue,\r\n                styleValue.val,\r\n                styleValue.stiffness,\r\n                styleValue.damping,\r\n                styleValue.precision,\r\n              );\r\n            }\r\n            const [nextIdealX, nextIdealV] = stepper(\r\n              msPerFrame / 1000,\r\n              newLastIdealStyleValue,\r\n              newLastIdealVelocityValue,\r\n              styleValue.val,\r\n              styleValue.stiffness,\r\n              styleValue.damping,\r\n              styleValue.precision,\r\n            );\r\n\r\n            newCurrentStyle[key] =\r\n              newLastIdealStyleValue +\r\n              (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\r\n            newCurrentVelocity[key] =\r\n              newLastIdealVelocityValue +\r\n              (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\r\n            newLastIdealStyle[key] = newLastIdealStyleValue;\r\n            newLastIdealVelocity[key] = newLastIdealVelocityValue;\r\n          }\r\n        }\r\n\r\n        newLastIdealStyles[i] = newLastIdealStyle;\r\n        newLastIdealVelocities[i] = newLastIdealVelocity;\r\n        newCurrentStyles[i] = newCurrentStyle;\r\n        newCurrentVelocities[i] = newCurrentVelocity;\r\n      }\r\n\r\n      this.animationID = null;\r\n      // the amount we're looped over above\r\n      this.accumulatedTime -= framesToCatchUp * msPerFrame;\r\n\r\n      this.setState({\r\n        currentStyles: newCurrentStyles,\r\n        currentVelocities: newCurrentVelocities,\r\n        lastIdealStyles: newLastIdealStyles,\r\n        lastIdealVelocities: newLastIdealVelocities,\r\n        mergedPropsStyles: newMergedPropsStyles,\r\n      });\r\n\r\n      this.unreadPropStyles = null;\r\n\r\n      this.startAnimationIfNecessary();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.prevTime = defaultNow();\r\n    this.startAnimationIfNecessary();\r\n  }\r\n\r\n  componentWillReceiveProps(props: TransitionProps) {\r\n    if (this.unreadPropStyles) {\r\n      // previous props haven't had the chance to be set yet; set them here\r\n      this.clearUnreadPropStyle(this.unreadPropStyles);\r\n    }\r\n\r\n    const styles = props.styles;\r\n    if (typeof styles === 'function') {\r\n      this.unreadPropStyles = styles(\r\n        rehydrateStyles(\r\n          this.state.mergedPropsStyles,\r\n          this.unreadPropStyles,\r\n          this.state.lastIdealStyles,\r\n        ),\r\n      );\r\n    } else {\r\n      this.unreadPropStyles = styles;\r\n    }\r\n\r\n    if (this.animationID == null) {\r\n      this.prevTime = defaultNow();\r\n      this.startAnimationIfNecessary();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unmounting = true;\r\n    if (this.animationID != null) {\r\n      defaultRaf.cancel(this.animationID);\r\n      this.animationID = null;\r\n    }\r\n  }\r\n\r\n  render(): ReactElement {\r\n    const hydratedStyles = rehydrateStyles(\r\n      this.state.mergedPropsStyles,\r\n      this.unreadPropStyles,\r\n      this.state.currentStyles,\r\n    );\r\n    const renderedChildren = this.props.children(hydratedStyles);\r\n    return renderedChildren && React.Children.only(renderedChildren);\r\n  }\r\n}\r\n","/* @flow */\r\nimport type { TransitionStyle } from './Types';\r\n\r\n// core keys merging algorithm. If previous render's keys are [a, b], and the\r\n// next render's [c, b, d], what's the final merged keys and ordering?\r\n\r\n// - c and a must both be before b\r\n// - b before d\r\n// - ordering between a and c ambiguous\r\n\r\n// this reduces to merging two partially ordered lists (e.g. lists where not\r\n// every item has a definite ordering, like comparing a and c above). For the\r\n// ambiguous ordering we deterministically choose to place the next render's\r\n// item after the previous'; so c after a\r\n\r\n// this is called a topological sorting. Except the existing algorithms don't\r\n// work well with js bc of the amount of allocation, and isn't optimized for our\r\n// current use-case bc the runtime is linear in terms of edges (see wiki for\r\n// meaning), which is huge when two lists have many common elements\r\nexport default function mergeDiff(\r\n  prev: Array<TransitionStyle>,\r\n  next: Array<TransitionStyle>,\r\n  onRemove: (\r\n    prevIndex: number,\r\n    prevStyleCell: TransitionStyle,\r\n  ) => ?TransitionStyle,\r\n): Array<TransitionStyle> {\r\n  // bookkeeping for easier access of a key's index below. This is 2 allocations +\r\n  // potentially triggering chrome hash map mode for objs (so it might be faster\r\n  // to loop through and find a key's index each time), but I no longer care\r\n  let prevKeyIndex: { [key: string]: number } = {};\r\n  for (let i = 0; i < prev.length; i++) {\r\n    prevKeyIndex[prev[i].key] = i;\r\n  }\r\n  let nextKeyIndex: { [key: string]: number } = {};\r\n  for (let i = 0; i < next.length; i++) {\r\n    nextKeyIndex[next[i].key] = i;\r\n  }\r\n\r\n  // first, an overly elaborate way of merging prev and next, eliminating\r\n  // duplicates (in terms of keys). If there's dupe, keep the item in next).\r\n  // This way of writing it saves allocations\r\n  let ret = [];\r\n  for (let i = 0; i < next.length; i++) {\r\n    ret[i] = next[i];\r\n  }\r\n  for (let i = 0; i < prev.length; i++) {\r\n    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {\r\n      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't\r\n      // merge in keys that the user desires to kill\r\n      const fill = onRemove(i, prev[i]);\r\n      if (fill != null) {\r\n        ret.push(fill);\r\n      }\r\n    }\r\n  }\r\n\r\n  // now all the items all present. Core sorting logic to have the right order\r\n  return ret.sort((a, b) => {\r\n    const nextOrderA = nextKeyIndex[a.key];\r\n    const nextOrderB = nextKeyIndex[b.key];\r\n    const prevOrderA = prevKeyIndex[a.key];\r\n    const prevOrderB = prevKeyIndex[b.key];\r\n\r\n    if (nextOrderA != null && nextOrderB != null) {\r\n      // both keys in next\r\n      return nextKeyIndex[a.key] - nextKeyIndex[b.key];\r\n    } else if (prevOrderA != null && prevOrderB != null) {\r\n      // both keys in prev\r\n      return prevKeyIndex[a.key] - prevKeyIndex[b.key];\r\n    } else if (nextOrderA != null) {\r\n      // key a in next, key b in prev\r\n\r\n      // how to determine the order between a and b? We find a \"pivot\" (term\r\n      // abuse), a key present in both prev and next, that is sandwiched between\r\n      // a and b. In the context of our above example, if we're comparing a and\r\n      // d, b's (the only) pivot\r\n      for (let i = 0; i < next.length; i++) {\r\n        const pivot = next[i].key;\r\n        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          nextOrderA < nextKeyIndex[pivot] &&\r\n          prevOrderB > prevKeyIndex[pivot]\r\n        ) {\r\n          return -1;\r\n        } else if (\r\n          nextOrderA > nextKeyIndex[pivot] &&\r\n          prevOrderB < prevKeyIndex[pivot]\r\n        ) {\r\n          return 1;\r\n        }\r\n      }\r\n      // pluggable. default to: next bigger than prev\r\n      return 1;\r\n    }\r\n    // prevOrderA, nextOrderB\r\n    for (let i = 0; i < next.length; i++) {\r\n      const pivot = next[i].key;\r\n      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\r\n        continue;\r\n      }\r\n      if (\r\n        nextOrderB < nextKeyIndex[pivot] &&\r\n        prevOrderA > prevKeyIndex[pivot]\r\n      ) {\r\n        return 1;\r\n      } else if (\r\n        nextOrderB > nextKeyIndex[pivot] &&\r\n        prevOrderA < prevKeyIndex[pivot]\r\n      ) {\r\n        return -1;\r\n      }\r\n    }\r\n    // pluggable. default to: next bigger than prev\r\n    return -1;\r\n  });\r\n}\r\n","/* @flow */\r\nexport default {\r\n  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided\r\n  gentle: { stiffness: 120, damping: 14 },\r\n  wobbly: { stiffness: 180, damping: 12 },\r\n  stiff: { stiffness: 210, damping: 20 },\r\n};\r\n","/* @flow */\r\nimport presets from './presets';\r\nimport type { OpaqueConfig, SpringHelperConfig } from './Types';\r\n\r\nconst defaultConfig = {\r\n  ...presets.noWobble,\r\n  precision: 0.01,\r\n};\r\n\r\nexport default function spring(\r\n  val: number,\r\n  config?: SpringHelperConfig,\r\n): OpaqueConfig {\r\n  return { ...defaultConfig, ...config, val };\r\n}\r\n","import React from 'react';\r\nimport TransitionMotion from '../../react-motion/TransitionMotion';\r\nimport spring from '../../react-motion/spring';\r\nimport './WaterRipples.css';\r\n\r\nconst leavingSpringConfig = {stiffness: 60, damping: 15};\r\n\r\nexport default class WaterRipplesContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {mouse: [], now: 't' + 0};\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  };\r\n\r\n  handleMouseMove = ({pageX, pageY}) => {\r\n    this.setState(() => {\r\n      return {\r\n        mouse: [pageX - 25, pageY - 25],\r\n        now: 't' + Date.now(),\r\n      };\r\n    });\r\n  };\r\n  handleKeyDown = (e) => {\r\n    this.setState({\r\n      mouse: [this.randomNumber(0, 1500), this.randomNumber(0, 600)],\r\n      now: 't' + Date.now()\r\n    })\r\n  };\r\n\r\n  randomNumber = (min, max) => {\r\n    return Math.round(min + Math.random(max - min) * max)\r\n  };\r\n  handleTouchMove = (e) => {\r\n    e.preventDefault();\r\n    if(e.code) {\r\n      this.handleMouseMove();\r\n    }\r\n    else {\r\n      this.handleMouseMove(e.touches[0]);\r\n    }\r\n  };\r\n\r\n  willLeave = (styleCell) => {\r\n    return {\r\n      ...styleCell.style,\r\n      opacity: spring(0, leavingSpringConfig),\r\n      scale: spring(2, leavingSpringConfig),\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {mouse: [mouseX, mouseY], now} = this.state;\r\n    const styles = mouseX == null ? [] : [{\r\n      key: now,\r\n      style: {\r\n        opacity: spring(1),\r\n        scale: spring(0),\r\n        x: spring(mouseX),\r\n        y: spring(mouseY),\r\n      }\r\n    }];\r\n    return (\r\n      <TransitionMotion willLeave={this.willLeave} styles={styles}>\r\n        {circles =>\r\n          <div\r\n            onMouseMove={this.handleMouseMove}\r\n            onTouchMove={this.handleTouchMove}\r\n            className=\"header__container\"\r\n          >\r\n            {circles.map(({key, style: {opacity, scale, x, y}}) =>\r\n              <div\r\n                key={key}\r\n                className=\"header__ball\"\r\n                style={{\r\n                  opacity: opacity,\r\n                  scale: scale,\r\n                  transform: `translate3d(${x}px, ${y}px, 0) scale(${scale})`,\r\n                  WebkitTransform: `translate3d(${x}px, ${y}px, 0) scale(${scale})`,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        }\r\n      </TransitionMotion>\r\n    );\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport WaterRipplesContainer from './WaterRipples/WaterRipplesContainer';\r\n\r\nimport './Header.css';\r\n\r\nexport default class HeaderContainer extends Component {\r\n  render() {\r\n    return(\r\n      <header>\r\n        <WaterRipplesContainer/>\r\n      </header>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './GridCell.css';\r\n\r\ntype Props = {\r\n  key: number,\r\n  foodCell: boolean,\r\n  snakeCell: boolean\r\n}\r\n\r\nclass GridCell extends Component<Props> {\r\n  render() {\r\n    const {\r\n      foodCell,\r\n      snakeCell,\r\n      tailCell,\r\n      key\r\n    } = this.props;\r\n\r\n    const classes = `main__gridcell \r\n      ${foodCell ? 'main__gridcell--food': ''}\r\n      ${snakeCell ? 'main__gridcell--head': ''}\r\n      ${tailCell ? 'main__gridcell--tail': ''}\r\n    `;\r\n\r\n    return (\r\n      <div className={ classes } key={ key }/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridCell;\r\n","import * as React from 'react';\r\n\r\nconst boardGameOver = ({ snake }) => {\r\n  return(\r\n    <div>\r\n      <h1 className=\"gameOver__message\">\r\n        Game Over\r\n      </h1>\r\n      <h1 className=\"gameOver__message\">\r\n        Your Score { snake.tail.length }\r\n      </h1>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default boardGameOver;","import * as React from 'react';\r\nimport GridCell from './GridCell/GridCell';\r\nimport  './Board.css';\r\nimport BoardGameOver from \"./BoardGameOver\";\r\nimport { Snake } from './BoardContainer';\r\nimport { row_col } from './BoardContainer';\r\n\r\ntype Props = {\r\n  snake: Snake,\r\n  apple: row_col,\r\n  setDirection(): void\r\n}\r\n\r\nexport default class BoardComponent extends React.Component<Props> {\r\n  render() {\r\n    const {\r\n      gridSize,\r\n      snake,\r\n      apple,\r\n      gameOver\r\n    } = this.props;\r\n    const cells = Array.from(Array(gridSize).keys());\r\n\r\n    const boardItem = cells.map(col => {\r\n      return cells.map(row => {\r\n        const foodCell = (apple.row === row && apple.col === col);\r\n        const snakeCell = (snake.head.row === row && snake.head.col === col);\r\n        const tailCell = snake.tail.find(item => {\r\n          return(item.row === row && item.col === col)\r\n        });\r\n        return (\r\n          <GridCell\r\n            snakeCell={ snakeCell }\r\n            foodCell={ foodCell }\r\n            tailCell={ tailCell }\r\n            key={row + ' ' + col}\r\n          />\r\n        )\r\n      });\r\n    });\r\n    return(\r\n      <div>\r\n        <div className={gameOver ? 'main__gameOver' :  'main__board'}>\r\n          { !gameOver ? boardItem : <BoardGameOver snake={ snake }/>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport './Board.css';\r\nimport BoardComponent from \"./BoardComponent\";\r\n\r\nexport type row_col = {\r\n  row: number,\r\n  col: number\r\n}\r\n\r\nexport interface Snake {\r\n  head: row_col,\r\n  tail: number[],\r\n}\r\n\r\n\r\ntype State = {\r\n  cellElement: number[],\r\n  apple: row_col,\r\n  snake: Snake,\r\n  intervalID: Object,\r\n  gridSize: number\r\n}\r\n\r\n\r\nclass BoardContainer extends React.Component<null, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intervalID: {},\r\n      gridSize: 20,\r\n      snake: {\r\n        head: {\r\n          row: 4,\r\n          col: 4\r\n        },\r\n        tail: []\r\n      },\r\n      apple: {\r\n        row: 0,\r\n        col: 0\r\n      },\r\n      direction: {\r\n        x: 1,\r\n        y: 0\r\n      },\r\n      gameOver: false\r\n    };\r\n  };\r\n  componentWillMount() {\r\n    this.setState({\r\n      height: window.innerHeight\r\n    });\r\n    this.getRandomApple();\r\n  }\r\n  componentDidMount() {\r\n    const { snake } = this.state;\r\n    document.addEventListener(\"keydown\", e => {\r\n      this.setDirection(e)\r\n    });\r\n    setInterval(() => {\r\n      this.gameLoop();\r\n    }, (snake.tail.length !== 0) ?  (snake.tail.length / 200) * 200 : 200)\r\n  }\r\n  getRandomApple = () => {\r\n    const FoodX = parseInt(Math.floor(Math.random()*20));\r\n    const FoodY = parseInt(Math.floor(Math.random()*20));\r\n    const randomFood = {\r\n      row: FoodX,\r\n      col: FoodY\r\n    };\r\n\r\n    this.setState({\r\n      apple: randomFood\r\n    });\r\n  };\r\n  moveSnake = () => {\r\n    switch(this.state.key) {\r\n      case \"ArrowUp\":\r\n        this.setState({\r\n          direction: {\r\n            x: 0,\r\n            y: -1\r\n          }\r\n        });\r\n        break;\r\n      case \"ArrowDown\":\r\n        this.setState({\r\n          direction: {\r\n            x: 0,\r\n            y: 1\r\n          }\r\n        });\r\n        break;\r\n      case \"ArrowRight\":\r\n        this.setState({\r\n          direction: {\r\n            x: 1,\r\n            y: 0\r\n          }\r\n        });\r\n        break;\r\n      case \"ArrowLeft\":\r\n        this.setState({\r\n          direction: {\r\n            x: -1,\r\n            y: 0\r\n          }\r\n        });\r\n        break;\r\n    }\r\n  };\r\n  setDirection = e => {\r\n    this.setState({\r\n      key: e.key\r\n    });\r\n    this.moveSnake();\r\n  };\r\n\r\n  gameLoop = () => {\r\n    const {\r\n      direction,\r\n      snake,\r\n      apple\r\n    } = this.state;\r\n\r\n    const eatApple = this.collisionWithApple();\r\n    const collisionWithEdge = this.collisionWithEdge();\r\n    const collisionWithTail = this.collisionWithTail();\r\n    this.setState(() => {\r\n      const nextSnake = {\r\n        snake: {\r\n          head: {\r\n            row: snake.head.row + direction.x,\r\n            col: snake.head.col + direction.y\r\n          },\r\n          tail: [snake.head, ...snake.tail]\r\n        },\r\n        apple: eatApple ? this.getRandomApple() : apple\r\n      };\r\n      if(!eatApple) nextSnake.snake.tail.pop();\r\n      return nextSnake;\r\n    });\r\n    if(collisionWithEdge || collisionWithTail) {\r\n      this.endGame();\r\n      this.setState(() => ({\r\n        gameOver: true\r\n      }))\r\n    }\r\n  };\r\n\r\n  collisionWithApple = () => {\r\n    const { snake, apple } = this.state;\r\n    if(\r\n      snake.head.row === apple.row\r\n      && snake.head.col === apple.col\r\n    ) {\r\n      return true\r\n    }\r\n  };\r\n  collisionWithEdge = () => {\r\n    const { snake } = this.state;\r\n    if(snake.head.row > 20\r\n      || snake.head.col > 20\r\n      || snake.head.row < 0\r\n      || snake.head.col < 0\r\n    ) {\r\n      return true\r\n    }\r\n  };\r\n  collisionWithTail = () => {\r\n    const { snake } = this.state;\r\n    return snake.tail.find(inTail => {\r\n      return (inTail.row === snake.head.row && inTail.col === snake.head.col)\r\n    })\r\n  };\r\n\r\n  endGame = () => {\r\n    clearInterval(this.state.intervalID)\r\n  };\r\n\r\n  render(){\r\n    const {\r\n      snake, apple,\r\n      gridSize,\r\n      gameOver,\r\n      height\r\n    } = this.state;\r\n    return(\r\n      <BoardComponent\r\n        snake={ snake }\r\n        apple={ apple }\r\n        gridSize={ gridSize }\r\n        setDirection={ this.setDirection }\r\n        gameOver={ gameOver }\r\n        height={ height }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoardContainer;\r\n","import * as React from 'react';\nimport HeaderContainer from './Header/HeaderContainer';\nimport BoardContainer from './Board/BoardContainer';\nimport './App.css';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <HeaderContainer />\n        <BoardContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}